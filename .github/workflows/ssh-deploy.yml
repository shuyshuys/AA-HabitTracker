# Nama workflow yang akan muncul di GitHub Actions
name: SSH Deploy Workflow
# Deskripsi workflow untuk memberikan informasi tentang fungsinya
description: Deploys the project to a remote server via SSH using rsync.

# Trigger workflow - akan berjalan ketika ada push ke branch main
on:
  push:
    branches: [main]

# Definisi job yang akan dijalankan
jobs:
  build:
    # Menggunakan runner Ubuntu terbaru
    runs-on: ubuntu-latest
    steps:
      # Step 1: Deploy ke server menggunakan SSH
      - name: Deploy PHP to Server
        # Hanya jalankan jika semua step sebelumnya berhasil
        if: ${{ success() }}
        uses: appleboy/ssh-action@master
        with:
          # Konfigurasi koneksi SSH menggunakan GitHub Secrets
          host: ${{ secrets.SSH_HOST }}           # IP/hostname server
          username: ${{ secrets.SSH_USERNAME }}   # Username SSH
          port: ${{ secrets.SSH_PORT }}          # Port SSH (biasanya 22)
          key: ${{ secrets.SSH_KEY }}            # Private key SSH
          passphrase: ${{ secrets.SSH_PASSPHRASE }} # Passphrase untuk private key (jika ada)
          # Script yang akan dijalankan di server
          script: |
            # Switch to root untuk fix permissions
            sudo su - root -c "
              chown -R deploy:www-data /var/www/${{ vars.WEBSITE_FOLDER }}
              chmod -R 755 /var/www/${{ vars.WEBSITE_FOLDER }}
            "
            
            # Setup git safe directory
            git config --global --add safe.directory /var/www/${{ vars.WEBSITE_FOLDER }}
            
            cd /var/www/${{ vars.WEBSITE_FOLDER }}
            git checkout main
            git pull
            composer install --no-dev --optimize-autoloader

            cp .env.example .env
            php artisan key:generate --ansi

            # Update database configuration in .env
            sed -i 's/DB_CONNECTION=.*/DB_CONNECTION=mysql/' .env
            sed -i 's/# DB_HOST=.*/DB_HOST=${{ secrets.DB_HOST }}/' .env
            sed -i 's/# DB_PORT=.*/DB_PORT=${{ secrets.DB_PORT }}/' .env
            sed -i 's/# DB_DATABASE=.*/DB_DATABASE=${{ secrets.DB_DATABASE }}/' .env
            sed -i 's/# DB_USERNAME=.*/DB_USERNAME=${{ secrets.DB_USERNAME }}/' .env
            sed -i 's/# DB_PASSWORD=.*/DB_PASSWORD=${{ secrets.DB_PASSWORD }}/' .env
            
            # Update other environment variables if needed
            sed -i 's/APP_ENV=.*/APP_ENV=production/' .env
            sed -i 's/APP_DEBUG=.*/APP_DEBUG=false/' .env
            sed -i 's/APP_URL=.*/APP_URL=${{ vars.APP_URL }}/' .env

            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            
            # Final permission fix
            sudo su - root -c "
            chown -R www-data:www-data /var/www/${{ vars.WEBSITE_FOLDER }}
            chmod -R 775 /var/www/${{ vars.WEBSITE_FOLDER }}/storage
            chmod -R 775 /var/www/${{ vars.WEBSITE_FOLDER }}/bootstrap/cache
            "